demo()
install.packages("KernSmooth")
install.packages("KernSmoothIRT")
install.packages("KernSmooth")
library(KernSmooth)
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time
)
select(cran,-X:size)
select(cran,-X:-size)
-5:20
-(5:20)
select(cran,-(X:-size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
View(by_package)
View(cran)
by_package
summarize(cran, avg_bytes = mean(size))
summarize(by_package, avg_bytes = mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread()
?spread
submit()
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failes")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
View(sat)
sat
?select
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_oment <- now()
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 23, minutes = 16, seconds = 55)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 00)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrival)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
R.version
library(dplyr)
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final")
test <- read.table("./UCI HAR Dataset/train/X_train.txt")
View(test)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt")
x_train <- test
rm("test")
s_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
View(activity_labels)
names(activity_labels) <- c("activity_id","activity_name")
View(activity_labels)
features <- read.table("./UCI HAR Dataset/features.txt")
names(features) <- c("feat_id","feature_name")
View(features)
test <- gsub("()","",features$feature_name)
test <- gsub("()","",features$feature_name, fixed = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(readr)
library(tidyr)
names(x_train) <- gsub("()","",features$feature_name, fixed = TRUE)
View(x_train)
View(s_train)
names(s_train) <- c("subject_id")
View(y_train)
names(y_train) <- c("activity_id")
?cbind
full_train <- cbind(s_train, y_train, xtrain)
full_train <- cbind(s_train, y_train, x_train)
View(full_train)
x_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
s_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
source('~/Projects/dscoursera/GettingAndCleaningData_Final/run_analysis.R')
View(full_train)
experiment_data <- rbind(full_train, full_test)
?select
test <- select(experiment_data, subject_id, activity_id, contains("mean"), contains("std"))
tib <- as_tibble(experiment_data)
names(x_train) <- gsub(",","-",gsub("()","",features$feature_name, fixed = TRUE), fixed = TRUE)
View(x_train)
names(x_test) <- gsub(",","-",gsub("()","",features$feature_name, fixed = TRUE), fixed = TRUE)
full_train <- cbind(s_train, y_train, x_train)
full_test <- cbind(s_test, y_test, x_test)
experiment_data <- rbind(full_train, full_test)
tib <- as_tibble(experiment_data)
tib <- tbl_df(experiment_data)
test <- select(experiment_data, subject_id, activity_id, contains("mean"), contains("std"))
names(experiment_data) <- gsub("-","",gsub(",","-",gsub("()","",features$feature_name, fixed = TRUE), fixed = TRUE),fixed = TRUE)
tib <- tbl_df(experiment_data)
names(experiment_data)
names(x_train)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/run_analysis.R')
names(x_train)
names(experiment_data)
tib <- as_tibble(experiment_data)
tib <- tbl_df(experiment_data)
grepl("mean",names(experiment_data))
grepl("std",names(experiment_data))
df1 <- experiment_data[,grepl("std",names(experiment_data))]
View(df1)
df2 <- experiment_data[,grepl("mean",names(experiment_data))]
View(df2)
df3 <- experiment_data[,1:2]
View(df3)
selected_set <- cbind(experiment_data[,1:2], experiment_data[,grepl("std",names(experiment_data))], experiment_data[,grepl("mean",names(experiment_data))])
View(selected_set)
rm("df2")
rm("df1")
rm("df3")
View(selected_set)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/run_analysis.R')
View(selected_set)
names(selected_set) <- gsub("std","Std",names(selected_set), fixed = TRUE)
View(selected_set)
names(selected_set) <- gsub("mean","Mean",names(selected_set), fixed = TRUE)
View(selected_set)
selected_tbl <- as_tibble(selected_set)
selected_tbl <- group_by(selected_tbl, subject_id, activity_id)
selected_tbl
source('~/Projects/dscoursera/GettingAndCleaningData_Final/run_analysis.R')
new_tbl <- selected_tbl %>% group_by(subject_id, activity_id) %>% summarise()
View(new_tbl)
new_tbl <- selected_tbl %>% group_by(subject_id, activity_id) %>% summarise_all(funs(med = median))
View(new_tbl)
new_tbl <- selected_tbl %>% group_by(subject_id, activity_id) %>% summarise_all(funs(mean, "mean",mean(.,na.rm=TRUE)))
write.csv(experiment_data, file = "experimentaldata.csv")
write.csv(new_tbl, file = "new_tidy_dataset.csv")
setwd("~/Projects/dscoursera")
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final")
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset")
source('~/.active-rstudio-document', echo=TRUE)
View(new_chosen_means_std)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset/R2.R')
install.packages("Plyr")
install.packages(c("boot", "curl", "dplyr", "mgcv", "Rcpp"))
install.packages("plyr")
