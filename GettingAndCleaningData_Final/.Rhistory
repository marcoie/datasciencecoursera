library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failes")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
View(sat)
sat
?select
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_oment <- now()
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 23, minutes = 16, seconds = 55)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 00)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrival)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
R.version
library(dplyr)
library(swirl)
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
elect(cran, ip_id,
| package, country)
elect(cran, ip_id, package, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(carn, package)
by_package <- group_by(cran, package)
by_package
summarize(cran,mean(size))
summarize(cran,bypackage = mean(size))
summarize(cran,bypackage, mean(size))
summarize(bypackage, mean(size))
summarize(by_package, mean(size))
?N
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <-  filter(pack_sum, count > 679)
?quantile
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <-  arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, - grade)
res
?separate
separate(res, sex_class, into = c("sex","class"))
submit()
students3
submit()
?spread
submit()
package with library(readr)
library(readr)
parse_number("class5")
submit()
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
packageVersion('dplyr')
bind_rows(passed, failed)
sat
submit()
submit()
?cut
?download.file
setwd("~/Projects/dscoursera/GettingNCleaningData")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "US2006_microdata_survey.csv")
survey_data <- read.csv("US2006_microdata_survey.csv")
View(survey_data)
tail(survey_data)
library(dplyr)
library(readr)
library(tidyr)
survey_table <- tbl_df(survey_data)
View(survey_table)
rm("survey_data")
survey_data <- read.csv("US2006_microdata_survey.csv")
rm("survey_data")
filter(survey_table, ACR == 3 && AGS = 6)
filtrado <- filter(survey_table, ACR == 3 && AGS == 6)
filtrado <- filter(survey_table, ACR == 3 & AGS == 6)
View(filtrado)
?which
survey_data <- read.csv("US2006_microdata_survey.csv")
agricultureLogical <- survey_data[survey_data$ACR ==3 & survey_data$AGS == 6,]
View(agricultureLogical)
which(agricultureLogical)
agricultureLogical <- is.na(survey_data[survey_data$ACR ==3 & survey_data$AGS == 6,])
agricultureLogical <- is.na(survey_data[survey_data$ACR ==3 & survey_data$AGS == 6,1])
which(agricultureLogical)
agricultureLogical <- survey_data[survey_data$ACR ==3 & survey_data$AGS == 6,]
View(agricultureLogical)
with(survey_data, survey_data$ACR == 3 & survey_data$AGS ==6)
vectorlogico <- with(survey_data, survey_data$ACR == 3 & survey_data$AGS ==6)
which(vectorlogico
)
install.packages("Jpg")
install.packages("jpeg")
library(jpeg)
jpegdata <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native=TRUE)
?readJPEG
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "Fjeff.jpg")
jpegdata <- readJPEG("Fjeff.jpg",native=TRUE)
?quantile
quantile(jpegdata,probs = (0.3,0.8))
quantile(x = jpegdata, probs = (0.3,0.8))
quantile(x = jpegdata, probs = seq(0.3,0.8))
quantile(x = jpegdata, probs = seq(0.8))
quantile(x = jpegdata, probs = seq(0.3, 0.8))
?cut
cut(jpegdata, 0:9)
quantile(x = jpegdata, probs = seq(1,0,0.3))
quantile(x = jpegdata, probs = seq(0, 1, 0.25))
quantile(x = jpegdata, probs = seq(0, 1, 0.3))
quantile(x = jpegdata, probs = seq(0, 1, 0.1))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "FGDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "FEDSTATS.csv")
FGDP = read_csv("FGDP.csv")
FGDP = read.csv("FGDP.csv")
View(FGDP)
FEDSTATS = read.csv("FEDSTATS.csv")
View(FEDSTATS)
View(FGDP)
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
?sqldf
resultado <- sqldf("SELECT FGDP.*, FEDSTATS.* WHERE FGDP.X = FEDSTATS.CountryCode")
detach("package:RSQLite", unload=TRUE)
resultado <- sqldf("SELECT FGDP.*, FEDSTATS.* WHERE FGDP.X = FEDSTATS.CountryCode")
?merge
merge
library(dplyr)
?merge
resultado <- merge(FGDP, FEDSTATS, by.x = "X", by.y = "CountryCode")
?read.csv
FGDP = read.table("FGDP.csv", skip = 5)
FGDP = read.table(file = "FGDP.csv", skip = 5)
FGDP = read.csv("FGDP.csv", skip = 5)
FGDP = read.csv("FGDP.csv", skip = 4)
class(FGDP)
FGDP.f <- filter(FGDP,X.1 <= 190)
class(FGDP$X.1)
FGDP = read.csv("FGDP.csv", skip = 4, stringsAsFactors = FALSE)
class(FGDP$X.1)
FGDP.f <- filter(FGDP,as.integer(X.1) <= 190)
View(FGDP.f)
View(FGDP.f)
resultado <- merge(FGDP.f, FEDSTATS, by.x = "X", by.y = "CountryCode")
FGDP.a <- arrange(FGDP.f, desc(X.1)
)
View(FGDP.a)
FGDP.a <- arrange(FGDP.f, desc(as.integer(X.1))
)
View(FGDP)
FGDP.m <- mutate(FGDP,X.1 = as.integer(X.1))
View(FGDP.m)
resultado2 <- merge(FGDP.m, FEDSTATS, by.x = "X", by.y = "CountryCode")
newranking <- arrange(FGDP.m, desc(X.4))
View(newranking)
FGDP.m <- mutate(FGDP,X.1 = as.integer(X.1), X.4 = as.double(X.4))
?as.double
newranking <- arrange(FGDP.m, desc(X.4))
View(FGDP)
class(FGDP$X.4)
as.double(FGDP$X.4[1])
FGDP$X.4[1]
as.numeric(" 16,244,600 ")
as.numeric("16,244,600")
as.numeric("16244600")
is.numeric("16,224,600")
?read.csv
?gsub
grep(" "," 16,244,600 ")
gsub(" ",""," 16,244,600 ")
gsub(c(" ",","),""," 16,244,600 ")
FGDP.m <- mutate(FGDP,X.1 = as.integer(X.1), X.4 = as.double(gsub(",","",gsub(" ","",X.4))))
newranking <- arrange(FGDP.m, desc(X.4))
View(newranking)
View(FEDSTATS)
resultado2 <- merge(FGDP.m, FEDSTATS, by.x = "X", by.y = "CountryCode")
View(resultado2)
rankingadat <-  tbl_df(resultado2)
View(rankingadat)
group_by(rankingadat, income.Group)
group_by(rankingadat, Income.Group)
summarize(rankingadat, avgrnk = mean(X.1))
?summarize
group_vars(rankingadat)
?mean
summarize(rankingadat, avgrnk = mean(X.1, na.rm = TRUE))
rankingadat
rankd <- group_by(rankingadat, Income.Group)
summarize(rankd, avgrnk = mean(X.1, na.rm = TRUE))
View(FGDP.m)
seleccion <- select(rankingadat, X, X.1, X.3, X.4, Income.Group)
View(seleccion)
?quantile
quantile(seleccion$X.1,probs = seq(0,1,0.2), na.rm = TRUE)
filtrado <- filter(seleccion, X.1 <= 38)
View(filtrado)
filtrado <- group_by(filtrado, Income.Group)
filtrado
summarize(filtrado, co = n())
read.table()
?read.table
View(FGDP)
ZFGDP = read.Table("FGDP.csv", skip = 4, stringsAsFactors = FALSE, colClasses = c("character","integer","NULL","character","numeric","character",NULL,NULL,NULL,NULL))
ZFGDP = read.table("FGDP.csv", skip = 4, stringsAsFactors = FALSE, colClasses = c("character","integer","NULL","character","numeric","character",NULL,NULL,NULL,NULL))
read.table("FGDP.csv")
read.table("FGDPtouch.csv")
ZFGDP = read.Table("FGDP.csv", stringsAsFactors = FALSE, colClasses = c("character","integer",NULL,"character","numeric","character",NULL,NULL,NULL,NULL))
ZFGDP = read.table("FGDP.csv", stringsAsFactors = FALSE, colClasses = c("character","integer",NULL,"character","numeric","character",NULL,NULL,NULL,NULL))
read.table("FGDPtouch.csv")
setwd("~/Projects/dscoursera")
fileurl <- "https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru"
download.file(fileUrl,destfile = "./ddata/cameras.csv",method = "curl")
cameraData <- read.csv/"./ddata/cameras.csv")
download.file(fileurl,destfile = "./ddata/cameras.csv",method = "curl")
cameraData <- read.csv("./ddata/cameras.csv")
names(cameraData)
fileurl <- "https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru"
fileurl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileurl,destfile = "./ddata/cameras.csv",method = "curl")
cameraData <- read.csv("./ddata/cameras.csv")
names(cameraData)
tolower(names(cameraData))
names(cameraData)
names(cameraData) <- tolower(names(cameraData))
names(cameraData)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day = today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
tmd("1989 May 17")
ymd("1989 May 17")
mdy(March 12, 1975)
mdy("March 12, 1975"")
mdy("March 12, 1975)
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
class(dt1)
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, minutes = 17, seconds = 55)
this_moment <- update(this_moment, hours = 10, minutes = 17, seconds = 55)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl,destfile = "./ddata/idaho.csv",method = "curl")
idahoData <- read.csv("./ddata/idaho.csv")
names(idahoData)
tolower(names(idahoData))
names(idahoData) <- tolower(names(idahoData))
names(idahoData)
View(idahoData)
names(idahoData)
idahoData$wgtp78
?strsplit
strsplit(names(idahoData),"wgtp")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl,destfile = "./ddata/gdp190.csv",method = "curl")
gdpData <- read.csv("./ddata/gdp190.csv")
View(gdpData)
View(gdpData)
View(gdpData)
valores <- gdpData$X.3
valores
?read.csv
gdpData <- read.csv("./ddata/gdp190.csv",stringsAsFactors = FALSE)
View(gdpData)
gdpData <- read.csv("./ddata/gdp190.csv",stringsAsFactors = FALSE, skip = 3)
gdpData <- read.csv("./ddata/gdp190.csv",stringsAsFactors = FALSE, skip = 4)
valores <- gdpData$X.3
valores
valores <- gdpData$X.4
valores
library(readr)
library(tidyr)
library(dplyr)
gdpTBL <- ytbl_df(gdpData)
gdpTBL <- tbl_df(gdpData)
View(gdpTBL)
gdpTBL <- mutate(gdpTBL,X.4 = as.double(gsub(",","",gsub(" ","",X.4))))
valores <- gdpTBL$X.4
valores
?mean
mean(valores,na.rm=TRUE)
mean(valores[1:190],na.rm=TRUE)
gdpData <- mutate(gdpData,X.4 = as.double(gsub(",","",gsub(" ","",X.4))))
mean(gdpData$X.4[1:190],na.rm=TRUE)
View(gdpData)
names(gdpData)[4]
names(gdpData)[4] <- "countryNames"
?grep
grep("^United",gdpData$countryNames), 3
grep("^United",gdpData$countryNames)
grep("United$",countryNames)
grep("United$",gdpData$countryNames)
grep("*United",gdpData$countryNames)
eduData <- read.csv("./ddata/EDSTATS_Country.csv")
eduTBL <- as_tibble(eduData)
View(eduTBL)
View(gdpTBL)
names(gdpTBL)[1] <- "CountryCode"
View(gdpTBL)
newTBL <- left_join(gdpTBL,eduTBL,by="CountryCode")
View(newTBL)
grep("^United",newTBL$SpecialNotes)
as.integer(grep("^United",newTBL$SpecialNotes))
grep("^United",newTBL$SpecialNotes)
?count
count(grep("^United",newTBL$SpecialNotes))
sum(grep("^United",newTBL$SpecialNotes))
sum(grep("^United",newTBL$Special.Notes))
count(grep("^United",newTBL$Special.Notes))
filter(newTBL, sum(grep("^Fiscal",newTBL$Special.Notes))>0)
testTBL <- filter(newTBL, sum(grep("^Fiscal",newTBL$Special.Notes))>0)
rm("testTBL")
testTBL <- filter(newTBL, sum(grep("^Fiscal",Special.Notes))>0)
rm("testTBL")
testTBL <- newTBL %>% filter(grepl("^Fiscal",Special.Notes)
)
View(testTBL)
testTBL <- newTBL %>% filter(grepl("^Fiscal",Special.Notes)) %>% filter(grepl("*June*",Special.Notes))
?grepl
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
count(sampleTimes)
class(sampleTimes)
class(amzn)
?class
class(amzn)
amzn
df <- as_data_frame(sampleTimes)
View(df)
df %>% filter()
df
names(df)
class(df$value)
df %>% filter(year(value)==2012)
df %>% filter(year(value)==2012)%>%count()
df %>% filter(year(value)==2012)%>%filter(day(value)==2)%>count()
df %>% filter(year(value)==2012)%>%filter(day(value)==2)%>%count()
df %>% filter(year(value)==2012)%>%filter(day(value)==1)%>%count()
testdf <- df %>% filter(year(value)==2012)
View(testTBL)
View(testdf)
df %>% filter(year(value)==2012)%>%filter(wday(value)==1)%>%count()
df %>% filter(year(value)==2012)%>%filter(wday(value)==2)%>%count()
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final")
