demo()
install.packages("KernSmooth")
install.packages("KernSmoothIRT")
install.packages("KernSmooth")
library(KernSmooth)
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time
)
select(cran,-X:size)
select(cran,-X:-size)
-5:20
-(5:20)
select(cran,-(X:-size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
View(by_package)
View(cran)
by_package
summarize(cran, avg_bytes = mean(size))
summarize(by_package, avg_bytes = mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread()
?spread
submit()
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failes")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
View(sat)
sat
?select
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_oment <- now()
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 23, minutes = 16, seconds = 55)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 00)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrival)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
R.version
library(dplyr)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset/R2.R')
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset")
source('~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset/R2.R')
View(result)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset/R3.R', echo=TRUE)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset/R3.R', echo=TRUE)
source('~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset/R3.R', echo=TRUE)
View(data3)
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final")
source('~/Projects/dscoursera/GettingAndCleaningData_Final/run_analysis.R', echo=TRUE)
summary(new_tbl)
?Summary
?summary
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
View(cars)
View(pressure)
Names(new_tbl)
names(new_tbl)
summary(new_tbl)
plot(summary(new_tbl))
anova(new_tbl)
table(new_tbl)
smry <- summary(new_tbl)
View(smry)
?require
?paste0
?memisc
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final/UCI HAR Dataset")
setwd("~/Projects/dscoursera/GettingAndCleaningData_Final")
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", col.names = c("activity_id","activity_name"))
View(activity_labels)
features <- read.table("./UCI HAR Dataset/features.txt", col.names = c("feat_id","feature_name"))
View(features)
s_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
View(s_train)
s_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = c("subject_id"))
View(s_train)
View(features)
View(features)
feature_labels <- gsub('^t', 'Timed', features)
feature_labels <- gsub('^t', 'Timed', features$feature_name)
feature_labels <- gsub('^t', 'Time', features$feature_name)
View(features)
features$feature_name <- gsub('^t', 'Time', features$feature_name)
features$feature_name <- gsub('^f', 'Freq', features$feature_name)
features$feature_name <- gsub('\\.mean', '\\.Mean', features$feature_name)
features$feature_name <- gsub('\\.mean', '\\.Mean', features$feature_name)
features$feature_name <- gsub('()', '', features$feature_name, fixed = TRUE)
features$feature_name <- gsub(',', '-', features$feature_name, fixed = TRUE)
View(features)
test <- cbind(features,features$feature_name)
View(test)
features <- read.table("./UCI HAR Dataset/features.txt", col.names = c("feat_id","feature_name"))
features <- cbind(features, features$feature_name)
View(features)
features$feature_name <- gsub('^t', 'Time', features$feature_name) #Label Time based features
features$feature_name <- gsub('^f', 'Freq', features$feature_name) #Label Freq based feaures
features$feature_name <- gsub('()', '', features$feature_name, fixed = TRUE) ##remove parenthesis
features$feature_name <- gsub(',', '-', features$feature_name, fixed = TRUE) ##rchange ,
features$feature_name <- features[,3]
features$feature_name <- gsub('-', '_', features$feature_name, fixed = TRUE) #Set underscore as base multi word separator
features$feature_name <- gsub('^t', 'Time', features$feature_name) #Label Time based features
features$feature_name <- gsub('^f', 'Freq', features$feature_name) #Label Freq based feaures
features$feature_name <- gsub('()', '', features$feature_name, fixed = TRUE) ##remove parenthesis
features$feature_name <- gsub(',', '-', features$feature_name, fixed = TRUE) ##rchange ,
features$feature_name <- gsub('angle(tBodyAccMean-gravity)','angleOftBodyAccMean-gravity)', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyAccJerkMean)-gravityMean)','angleOftBodyAccJerkMean-gravityMean)', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroMean-gravityMean)','angleOftBodyGyroMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroJerkMean-gravityMean)','angleOftBodyGyroJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(X-gravityMean)','angleOfX-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Y-gravityMean)','angleOfY-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Z-gravityMean)','angleOfZ-gravityMean', features$feature_name, fixed = TRUE)
features <- read.table("./UCI HAR Dataset/features.txt", col.names = c("feat_id","feature_name"))
features <- cbind(features, features$feature_name)
#Fix the Names of Features - including removal of "(" ")" "," and other symbols
features$feature_name <- gsub('-', '_', features$feature_name, fixed = TRUE) #Set underscore as base multi word separator
features$feature_name <- gsub('^t', 'Time', features$feature_name) #Label Time based features
features$feature_name <- gsub('^f', 'Freq', features$feature_name) #Label Freq based feaures
features$feature_name <- gsub('()', '', features$feature_name, fixed = TRUE) ##remove parenthesis
features$feature_name <- gsub(',', '-', features$feature_name, fixed = TRUE) ##rchange ,
##Specific rename for the angle features
features$feature_name <- gsub('angle(tBodyAccMean-gravity)','angleOftBodyAccMean-gravity', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyAccJerkMean)-gravityMean)','angleOftBodyAccJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroMean-gravityMean)','angleOftBodyGyroMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroJerkMean-gravityMean)','angleOftBodyGyroJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(X-gravityMean)','angleOfX-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Y-gravityMean)','angleOfY-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Z-gravityMean)','angleOfZ-gravityMean', features$feature_name, fixed = TRUE)
features <- read.table("./UCI HAR Dataset/features.txt", col.names = c("feat_id","feature_name"))
#Fix the Names of Features - including removal of "(" ")" "," and other symbols
features$feature_name <- gsub('-', '_', features$feature_name, fixed = TRUE) #Set underscore as base multi word separator
features$feature_name <- gsub('^t', 'Time', features$feature_name) #Label Time based features
features$feature_name <- gsub('^f', 'Freq', features$feature_name) #Label Freq based feaures
features$feature_name <- gsub('()', '', features$feature_name, fixed = TRUE) ##remove parenthesis
features$feature_name <- gsub(',', '-', features$feature_name, fixed = TRUE) ##rchange ,
##Specific rename for the angle features that had a complex nesting of parenthesis
features$feature_name <- gsub('angle(tBodyAccMean-gravity)','angleOftBodyAccMean-gravity', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyAccJerkMean)-gravityMean)','angleOftBodyAccJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroMean-gravityMean)','angleOftBodyGyroMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroJerkMean-gravityMean)','angleOftBodyGyroJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(X-gravityMean)','angleOfX-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Y-gravityMean)','angleOfY-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Z-gravityMean)','angleOfZ-gravityMean', features$feature_name, fixed = TRUE)
rm('test')
rm('feature_labels')
x_train1 <- read.table("./UCI HAR Dataset/train/X_train.txt")
x_train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = features$feature_name)
View(x_train)
View(x_train1)
rm("x_train1")
View(activity_labels)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", col.names = c("activity_id"))
View(y_train)
View(y_train)
View(activity_labels)
z <- y_train %>% left_join(activity_labels,by = "activity_id")
View(z)
View(activity_labels)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", col.names = c("activity_id")) %>% left_join(activity_labels,by = "activity_id")
View(y_train)
View(y_train)
full_train <- cbind(s_train, y_train$activity_name, x_train)
View(full_train)
View(y_train)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", col.names = c("activity_id")) %>% left_join(activity_labels,by = "activity_id") %>% select(activity_name)##get JUST activity labels
View(y_train)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", col.names = c("activity_id")) %>%
left_join(activity_labels,by = "activity_id") %>%
select(activity_name) ##get JUST activity labels
s_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = c("subject_id"))
rm("z")
x_test <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = features$feature_name)
y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt", col.names = c("activity_id")) %>%
left_join(activity_labels,by = "activity_id") %>%
select(activity_name) ##get activity and labels
s_test <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = c("subject_id"))
#combine Subject, Activity, and Sensor Data
full_test <- cbind(s_test, y_test, x_test)
experiment_data <- rbind(full_train, full_test)
View(full_train)
View(full_test)
library(readr)
library(tidyr)
library(dplyr)
#Read the base "activity" and "features" data so we can prepare "better labels" and use "activity name" instead of just the number
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", col.names = c("activity_id","activity_name"))
features <- read.table("./UCI HAR Dataset/features.txt", col.names = c("feat_id","feature_name"))
#Fix the Names of Features - including removal of "(" ")" "," and other symbols
features$feature_name <- gsub('-', '_', features$feature_name, fixed = TRUE) #Set underscore as base multi word separator
features$feature_name <- gsub('^t', 'Time', features$feature_name) #Label Time based features
features$feature_name <- gsub('^f', 'Freq', features$feature_name) #Label Freq based feaures
features$feature_name <- gsub('()', '', features$feature_name, fixed = TRUE) ##remove parenthesis
features$feature_name <- gsub(',', '-', features$feature_name, fixed = TRUE) ##rchange ,
##Specific rename for the angle features that had a complex nesting of parenthesis
features$feature_name <- gsub('angle(tBodyAccMean-gravity)','angleOftBodyAccMean-gravity', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyAccJerkMean)-gravityMean)','angleOftBodyAccJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroMean-gravityMean)','angleOftBodyGyroMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(tBodyGyroJerkMean-gravityMean)','angleOftBodyGyroJerkMean-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(X-gravityMean)','angleOfX-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Y-gravityMean)','angleOfY-gravityMean', features$feature_name, fixed = TRUE)
features$feature_name <- gsub('angle(Z-gravityMean)','angleOfZ-gravityMean', features$feature_name, fixed = TRUE)
##Read the Data for train set
x_train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = features$feature_name)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", col.names = c("activity_id")) %>%
left_join(activity_labels,by = "activity_id") %>%
select(activity_name) ##get JUST activity labels
s_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = c("subject_id"))
#combine Subject, Activity, and Sensor Data
full_train <- cbind(s_train, y_train, x_train)
x_test <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = features$feature_name)
y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt", col.names = c("activity_id")) %>%
left_join(activity_labels,by = "activity_id") %>%
select(activity_name) ##get activity and labels
s_test <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = c("subject_id"))
#combine Subject, Activity, and Sensor Data
full_test <- cbind(s_test, y_test, x_test)
experiment_data <- rbind(full_train, full_test)
View(features)
selected_set <- cbind(experiment_data[,1:2], experiment_data[,grepl("std",names(experiment_data))], experiment_data[,grepl("mean",names(experiment_data))])
View(selected_set)
View(full_train)
selected_set <- cbind(experiment_data[,1:2], experiment_data[,grepl("mean",names(experiment_data))], experiment_data[,grepl("std",names(experiment_data))])
View(selected_set)
selected_tbl <- as_tibble(selected_set)
selected_set <- as_tibble(cbind(experiment_data[,1:2], experiment_data[,grepl("mean",names(experiment_data))], experiment_data[,grepl("std",names(experiment_data))]))
View(selected_set)
new_tidy_tbl <- selected_set %>% group_by(subject_id, activity_id) %>% summarise_all(funs(mean, "mean",mean(.,na.rm=TRUE)))
new_tidy_tbl <- selected_set %>% group_by(subject_id, activity_name) %>% summarise_all(funs(mean, "mean",mean(.,na.rm=TRUE)))
View(new_tidy_tbl)
write.table(new_tidy_tbl, file = "new_tidy_dataset.txt")
View(new_tidy_tbl)
write.table(new_tidy_tbl, file = "new_tidy_dataset.txt", row.names = FALSE)
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
df <- as.data.frame(summarise(new_tidy_tbl))
View(df)
View(new_tidy_tbl)
summarize(new_tidy_tbl)
summary(new_tidy_tbl)
df <- as.data.frame(summary(new_tidy_tbl))
View(df)
dim_desc(new_tidy_tbl)
unlink('README_cache', recursive = TRUE)
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:rmarkdown", unload=TRUE)
knitr::opts_chunk$set(echo = TRUE)
tds <- read.table("new_tidy_dataset.txt")
dim_desc(tds)
dimnames.data.frame(tds)
View(tds)
tds <- read.table("new_tidy_dataset.txt", col.names = TRUE)
View(tds)
tds <- read.table("new_tidy_dataset.txt", col.names = TRUE)
View(tds)
tds <- read_table2("new_tidy_dataset.txt", col.names = TRUE)
View(tds)
tds <- read_delim("new_tidy_dataset.txt", " ", col.names = TRUE)
View(tds)
tds <- read_delim("new_tidy_dataset.txt", " ")
spec(tds)
dim_desc(tds)
dimnames.data.frame(tds)
dim(tds)
tds <- readr::read_delim("new_tidy_dataset.txt", " ",col_types = cols(.default = col_double(),subject_id = col_integer(), activity_name = col_character()))
dimnames.data.frame(tds)
dimnames.data.frame(tds)[[2]]
new_tidy_tbl <- selected_set %>% group_by(subject_id, activity_name) %>% summarise_all(funs(mean, "Avg",mean(.,na.rm=TRUE)))
description
knit_with_parameters('~/Projects/dscoursera/GettingAndCleaningData_Final/NewCodeBook.Rmd')
knit_with_parameters('~/Projects/dscoursera/GettingAndCleaningData_Final/NewCodeBook.Rmd')
pwd()
?pwd
features <- read.csv('./UCI HAR Dataset/features.txt', header = FALSE, sep = ' ')
View(features)
features <- as.character(features[,2])
data.train.x <- read.table('./UCI HAR Dataset/train/X_train.txt')
data.train.activity <- read.csv('./UCI HAR Dataset/train/y_train.txt', header = FALSE, sep = ' ')
data.train.subject <- read.csv('./UCI HAR Dataset/train/subject_train.txt',header = FALSE, sep = ' ')
data.train <-  data.frame(data.train.subject, data.train.activity, data.train.x)
names(data.train) <- c(c('subject', 'activity'), features)
View(data.train)
data.test.x <- read.table('./UCI HAR Dataset/test/X_test.txt')
data.test.activity <- read.csv('./UCI HAR Dataset/test/y_test.txt', header = FALSE, sep = ' ')
data.test.subject <- read.csv('./UCI HAR Dataset/test/subject_test.txt', header = FALSE, sep = ' ')
data.test <-  data.frame(data.test.subject, data.test.activity, data.test.x)
names(data.test) <- c(c('subject', 'activity'), features)
data.all <- rbind(data.train, data.test)
mean_std.select <- grep('mean|std', features)
data.sub <- data.all[,c(1,2,mean_std.select + 2)]
View(data.sub)
View(data.sub)
activity.labels <- read.table('./UCI HAR Dataset/activity_labels.txt', header = FALSE)
activity.labels <- as.character(activity.labels[,2])
data.sub$activity <- activity.labels[data.sub$activity]
name.new <- names(data.sub)
name.new <- gsub("[(][)]", "", name.new)
name.new <- gsub("^t", "TimeDomain_", name.new)
name.new <- gsub("^f", "FrequencyDomain_", name.new)
name.new <- gsub("Acc", "Accelerometer", name.new)
name.new <- gsub("Gyro", "Gyroscope", name.new)
name.new <- gsub("Mag", "Magnitude", name.new)
name.new <- gsub("-mean-", "_Mean_", name.new)
name.new <- gsub("-std-", "_StandardDeviation_", name.new)
name.new <- gsub("-", "_", name.new)
names(data.sub) <- name.new
View(data.sub)
dir()
getwd()
